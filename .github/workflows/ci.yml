
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  windows:
    name: Windows
    runs-on: windows-latest

    strategy:
      matrix:
        arch:
        - { name: x86, flags: -A Win32 }
        - { name: x64, flags: -A x64 }
        build: [ Debug, Release ]

    steps:
    - uses: actions/checkout@v3

    - name: "CMake: Configure"
      run: cmake -B build ${{ matrix.arch.flags }}

    - name: "CMake: Build"
      run: cmake --build build --config ${{ matrix.build }}

    - name: "CMake: Install"
      run: cmake --install build --config ${{ matrix.build }} --prefix install

    - uses: actions/upload-artifact@v3
      with:
        name: tyhylge-windows-${{ matrix.arch.name }}-${{ matrix.build }}
        path: install/*

  linux:
    name: Linux
    runs-on: ubuntu-latest
    container:
      image: centos:7
    env:
      CMAKE_VERSION: 3.28.1
      FREETYPE_VERSION: 2.13.2

    strategy:
      matrix:
        build: [ Debug, Release ]

    steps:
    - uses: actions/checkout@v3

    - name: "Cache CMake ${{ env.CMAKE_VERSION }}"
      id: cache-cmake
      uses: actions/cache@v3
      with:
        path: cmake-${{ env.CMAKE_VERSION }}-linux-x86_64.sh
        key: ${{ runner.os }}-cmake-${{ env.CMAKE_VERSION }}

    - name: "Download CMake ${{ env.CMAKE_VERSION }}"
      if: steps.cache-cmake.outputs.cache-hit != 'true'
      run: |
        curl -L -O https://cmake.org/files/v3.28/cmake-${{ env.CMAKE_VERSION }}-linux-x86_64.sh
        chmod +x cmake-${{ env.CMAKE_VERSION }}-linux-x86_64.sh

    - name: "Install CMake ${{ env.CMAKE_VERSION }}"
      run: ./cmake-${{ env.CMAKE_VERSION }}-linux-x86_64.sh --prefix=/usr/local --skip-license

    - name: "Cache dependency: FreeType ${{ env.FREETYPE_VERSION }}"
      id: cache-freetype
      uses: actions/cache@v3
      with:
        path: freetype-build
        key: ${{ runner.os }}-freetype-${{ env.FREETYPE_VERSION }}

    - name: "Build dependency: FreeType ${{ env.FREETYPE_VERSION }}"
      if: steps.cache-freetype.output.cache-hit != 'true'
      run: |
        curl -L -o freetype-${{ env.FREETYPE_VERSION }}.tar.gz https://sourceforge.net/projects/freetype/files/freetype2/${{ env.FREETYPE_VERSION }}/freetype-${{ env.FREETYPE_VERSION }}.tar.gz/download
        tar xf freetype-${{ env.FREETYPE_VERSION }}.tar.gz
        cd freetype-${{ env.FREETYPE_VERSION }}
        ./configure --prefix=${{ github.workspace }}/freetype-build
        make -j4
        make install

    - name: Install system dependencies
      run: yum install -y make gcc gcc-c++

    - name: "CMake: Configure"
      run: >
        cmake -B build
        -DCMAKE_BUILD_TYPE=${{ matrix.build }}
        -DCMAKE_PREFIX_PATH=${{ github.workspace }}/freetype-build
        -DTYHYLGE_USE_FREETYPE=1

    - name: "CMake: Build"
      run: cmake --build build

    - name: "CMake: Install"
      run: cmake --install build --prefix install

    - uses: actions/upload-artifact@v3
      with:
        name: tyhylge-linux-amd64-${{ matrix.build }}
        path: install/*

