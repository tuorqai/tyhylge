
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  windows:
    name: Windows
    runs-on: windows-latest

    strategy:
      matrix:
        arch:
        - { name: x86, flags: -A Win32 }
        - { name: x64, flags: -A x64 }
        build: [ Debug, Release ]

    steps:
    - uses: actions/checkout@v3

    - name: "CMake: Configure"
      run: cmake -B build ${{ matrix.arch.flags }}

    - name: "CMake: Build"
      run: cmake --build build --config ${{ matrix.build }}

    - name: "CMake: Install"
      run: cmake --install build --config ${{ matrix.build }} --prefix install

    - uses: actions/upload-artifact@v3
      with:
        name: tyhylge-windows-${{ matrix.arch.name }}-${{ matrix.build }}
        path: install/*

  linux:
    name: Linux
    runs-on: ubuntu-latest
    container:
      image: centos:7
    env:
      CMAKE_VERSION: 3.28.1

    strategy:
      matrix:
        config:
        - { name: Static, flags: -DBUILD_SHARED_LIBS=0 }
        - { name: Shared, flags: -DBUILD_SHARED_LIBS=1 }
        build: [ Debug, Release ]

    steps:
    - uses: actions/checkout@v3

    - name: "Cache CMake ${{ env.CMAKE_VERSION }}"
      id: cache-cmake
      uses: actions/cache@v2
      with:
        path: cmake-${{ env.CMAKE_VERSION }}-linux-x86_64.sh
        key: ${{ runner.os }}-cmake-${{ env.CMAKE_VERSION }}

    - name: "Download CMake ${{ env.CMAKE_VERSION }}"
      if: steps.cache-cmake.outputs.cache-hit != 'true'
      run: |
        curl -L -O https://cmake.org/files/v3.28/cmake-${CMAKE_VERSION}-linux-x86_64.sh
        chmod +x cmake-${CMAKE_VERSION}-linux-x86_64.sh

    - name: "Install CMake ${{ env.CMAKE_VERSION }}"
      run: ./cmake-${CMAKE_VERSION}-linux-x86_64.sh --prefix=/usr/local --skip-license

    - name: Install system dependencies
      run: yum install -y tree make gcc gcc-c++

    - name: Cache dependency binaries
      id: cache-depbin
      uses: actions/cache@v2
      with:
        path: deps
        key: linux-depbin-${{ hashFiles('scripts/make-dependencies.sh') }}
        restore-keys: [ linux-depbin- ]

    - name: Cache dependency sources
      if: steps.cache-depbin.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: pkgs
        key: depsrc-${{ hashFiles('scripts/make-dependencies.sh') }}
        restore-keys: [ depsrc- ]

    - name: Build dependencies
      if: steps.cache-depbin.outputs.cache-hit != 'true'
      run: scripts/make-dependencies.sh

    - name: "(TBR) tree deps"
      run: tree deps

    - name: "(TBR) tree pkgs"
      run: tree pkgs

    - name: "CMake: Configure"
      run: >
        cmake -B build
        -DCMAKE_BUILD_TYPE=${{ matrix.build }}
        -DCMAKE_PREFIX_PATH=${GITHUB_WORKSPACE}/deps
        -DTYHYLGE_USE_FREETYPE=1
        ${{ matrix.config.flags }}

    - name: "CMake: Build"
      run: cmake --build build

    - name: "CMake: Install"
      run: cmake --install build --prefix install

    - uses: actions/upload-artifact@v3
      with:
        name: tyhylge-linux-amd64-${{ matrix.config.name }}-${{ matrix.build }}
        path: install/*

